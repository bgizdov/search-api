# Stress test configuration with 1M records
# Use this profile for performance benchmarking and stress testing

# Sample Data Configuration - Large performance mode with 1M records
app.sample-data.mode=PERFORMANCE_LARGE

# Elasticsearch Dev Services Configuration - Optimized for large datasets
quarkus.elasticsearch.devservices.enabled=true
quarkus.elasticsearch.devservices.image-name=docker.io/elastic/elasticsearch:8.15.0
quarkus.elasticsearch.devservices.java-opts=-Xms1g -Xmx2g
quarkus.elasticsearch.devservices.shared=false
quarkus.elasticsearch.devservices.service-name=elasticsearch-stress
quarkus.elasticsearch.devservices.reuse=true

# Extended timeouts for very large data loading
quarkus.elasticsearch.connection-timeout=60s
quarkus.elasticsearch.socket-timeout=300s

# Application Configuration
quarkus.http.port=8080

# Logging configuration
quarkus.log.category."org.acme.search.service.DataInitializationService".level=INFO
quarkus.log.category."org.acme.search.util.PerformanceDataGenerator".level=INFO
quarkus.log.category."io.quarkus.elasticsearch.restclient.lowlevel.deployment".level=INFO
